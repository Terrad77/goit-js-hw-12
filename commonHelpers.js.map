{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["'use strict';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport simpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('#input');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nloader.style.display = 'none';\n\n//initialize object of simpleLightbox\nlet modal = new simpleLightbox('ul.gallery a', {\n  captionDelay: 250,\n  captionsData: 'alt',\n});\n\n// object of URLSearchParams - iterator\n// const searchParams = new URLSearchParams({\n//   key: '41494285-2be0c6d487dc7750955372a82',\n//   q: query,\n//   image_type: 'photo',\n//   orientation: 'horizontal',\n//   safesearch: true,\n// });\n\n// пангінація\n// Pixabay API підтримує пагінацію та надає параметри page і per_page.\nlet page = 1; // Початкове значення параметра 'page' повинно бути 1\nconst perPage = 40; // кількість зображень per_page\nconst loadMoreBtn = document.querySelector('.load-more');\nloadMoreBtn.style.display = 'none'; // Поки в галерії нема зображень, кнопка повинна бути прихована.\nlet query = ''; // global variable for save user input\n\n// стандартні налаштування axios.defaults\naxios.defaults.baseURL = 'https://pixabay.com'; // базова адреса\n//Axios автоматично додає заголовок із значенням до кожного запиту\n// axios.defaults.headers.common['ID'] = '41494285-2be0c6d487dc7750955372a82'; //але Corse не приймає header key - 403 Forbidden\n// const apiKey = '41494285-2be0c6d487dc7750955372a82';\n\nform.addEventListener('submit', async event => {\n  //скидання завантаження за Default\n  event.preventDefault();\n  gallery.innerHTML = ''; //очищення розмітки gallery\n  page = 1; // повернененя початкового значення page, при пошуку за новим ключовим словом\n  loadMoreBtn.style.display = 'none'; // Hide Load more button on new search\n\n  query = input.value.trim(); // Отримати значення input і видалити зайві пробіли\n  // перевірка на порожній рядок або лише пробіли\n  if (query === '') {\n    return;\n  }\n  loader.style.display = 'block'; //show loader\n  input.value = ''; //reset user input\n  try {\n    const response = await axios.get('/api/', {\n      params: {\n        key: '41494285-2be0c6d487dc7750955372a82',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: perPage, // Set numbers of pictures on page\n        page: 1, // Set initial number of page\n      },\n    });\n\n    loader.style.display = 'none';\n    const data = response.data;\n\n    if (data.hits.length === 0) {\n      throw iziToast.show({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        theme: 'dark',\n        backgroundColor: '#EF4040',\n        titleColor: 'white',\n        position: 'topRight',\n      });\n    }\n    const imgs = data.hits.reduce(\n      (\n        html,\n        { webformatURL, largeImageURL, tags, likes, views, comments, downloads }\n      ) =>\n        html +\n        `<li class=\"gallery-item\">\n        <div class=\"card\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n           <img class=\"gallery-image\"\n           src=\"${webformatURL}\"\n           alt=\"${tags}\"\n           />\n          </a>\n          </div>          \n          <div class=\"description\">\n          <p>Likes:<span>${likes}</span></p>\n          <p>Views:<span>${views}</span></p>\n          <p>Comments:<span>${comments}</span></p>\n          <p>Downloads:<span>${downloads}</span></p>\n          </div> \n        </li>`,\n      ''\n    );\n\n    // add murkup to DOM\n    gallery.insertAdjacentHTML('beforeend', imgs);\n    // Show Load more button if more images available\n    if (data.hits.length >= perPage) {\n      loadMoreBtn.style.display = 'block';\n    }\n\n    //оновлення екземпляра SimpleLightbox кожного разу після додавання нових зображень\n    modal.refresh();\n  } catch (error) {\n    loader.style.display = 'none';\n    iziToast.error({\n      message: error.message,\n      color: 'red',\n      position: 'topCenter',\n    });\n    console.error('Error fetching data:', error);\n  }\n});\n\n// Event listener for Load more button\nloadMoreBtn.addEventListener('click', async () => {\n  //show loader\n  loader.style.display = 'block';\n  try {\n    const response = await axios.get('/api/', {\n      params: {\n        key: '41494285-2be0c6d487dc7750955372a82',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: perPage,\n        page: ++page, // Increment page number for next group of images\n      },\n    });\n    //hide loader\n    loader.style.display = 'none';\n    const data = response.data;\n\n    if (data.totalHits <= perPage * page) {\n      loadMoreBtn.style.display = 'none'; // Hide button if no more images\n      throw iziToast.show({\n        message: \"We're sorry, but you've reached the end of search results.\",\n        theme: 'dark',\n        backgroundColor: 'navy',\n        titleColor: 'white',\n        position: 'topRight',\n      });\n    }\n\n    const imgs = data.hits.reduce(\n      (\n        html,\n        { webformatURL, largeImageURL, tags, likes, views, comments, downloads }\n      ) =>\n        html +\n        `<li class=\"gallery-item\"><div class=\"card\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n           <img class=\"gallery-image\"\n           src=\"${webformatURL}\"\n           alt=\"${tags}\"\n           />\n          </a></div>         \n          <div class=\"description\">\n            <p>Likes:<span>${likes}</span></p>\n            <p>Views:<span>${views}</span></p>\n            <p>Comments:<span>${comments}</span></p>\n            <p>Downloads:<span>${downloads}</span></p>\n          </div> \n        </li>`,\n      ''\n    );\n\n    gallery.insertAdjacentHTML('beforeend', imgs);\n\n    // var.1 виклик scrollToNextGroup() в блоці try, після вставки нових елементів в DOM\n    scrollToNextGroup();\n\n    modal.refresh();\n  } catch (error) {\n    // ловимо помилку від await, якщо проміс був відхилений.\n    loader.style.display = 'none';\n    iziToast.error({\n      message: error.message,\n      color: 'red',\n      position: 'topCenter',\n    });\n    console.error('Error fetching more data:', error);\n  }\n});\n// Функція плавної прокрутки\nconst scrollToNextGroup = () => {\n  //отримай у коді висоту однієї карточки галереї, використовуючи функцію getBoundingClientRect.\n  const firstGalleryItem = document.querySelector('.gallery-item');\n  const galleryItemHeight = firstGalleryItem.getBoundingClientRect().height;\n\n  // The method scrolls the document into the window by the specified amount. сінтаксіс: scrollBy(x - coord, y - coord)  або   scrollBy({options});\n  window.scrollBy({\n    top: galleryItemHeight * 2, // scroll на дві висоти galleryItemHeight\n    behavior: 'smooth', // Плавна анімація прокрутки\n  });\n};\n\n//var.2 виклик функції поза блоком try, після події DOMContentLoaded – DOM готовий,\n//window.addEventListener('load', () => {scrollToNextGroup();});\n\n//var.3 виклик функції поза блоком try, після подіїа window.onload - сторінка повністю завантажена, включаючи усі вкладені ресурси (зображення, стилі, скрипти і т.д.).\n// document.addEventListener('DOMContentLoaded', () => {scrollToNextGroup();});\n"],"names":["form","input","gallery","loader","modal","simpleLightbox","page","perPage","loadMoreBtn","query","axios","event","response","data","iziToast","imgs","html","webformatURL","largeImageURL","tags","likes","views","comments","downloads","error","scrollToNextGroup","galleryItemHeight"],"mappings":"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"}